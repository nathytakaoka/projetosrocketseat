console.log(`1. Crie um script que exiba a mensagem "Hello World!" em um alerta no navegador.`)

console.log(`Hello World!`)

console.log(`2. Crie um script que declare duas vari√°veis e exiba o resultado da soma entre elas.`)

let numberOne = 12
let numberTwo = 3

let result = Number(numberOne + numberTwo)

console.log(`Resultado da soma de ${numberOne} + ${numberTwo} √© ${result}`)

console.log(`3. Crie um script que declare uma vari√°vel e verifique se o seu valor √© um n√∫mero. Se for, exiba a mensagem "√â um n√∫mero", caso contr√°rio, exiba a mensagem "N√£o √© um n√∫mero".
    
üí°¬†Para saber o tipo de dado voc√™ pode usar o operador "typeof"`)

let variableString = "abc"
let variableNumber = 20

let resultTypeOf = typeof(variableString) == "number" ? console.log(`O tipo ${variableString} √© um n√∫mero`) : console.log(`O tipo ${variableString} n√£o √© um n√∫mero`)

resultTypeOf = typeof(variableNumber) == "number" ? console.log(`O tipo ${variableNumber} √© um n√∫mero`) : console.log(`O tipo ${variableNumber} n√£o √© um n√∫mero`)

console.log(`4. Crie um script que declare uma vari√°vel e verifique se o seu valor √© uma string. Se for, exiba a mensagem "√â uma string", caso contr√°rio, exiba a mensagem "N√£o √© uma string".`)

variableString = "abc"
variableNumber = 20

resultTypeOf = typeof(variableString) == "string" ? console.log(`O tipo ${variableString} √© uma string`) : console.log(`O tipo ${variableString} n√£o √© uma string`)

resultTypeOf = typeof(variableNumber) == "string" ? console.log(`O tipo ${variableNumber} √© uma string`) : console.log(`O tipo ${variableNumber} n√£o √© uma string`)

console.log(`5. Crie um script que declare uma vari√°vel e verifique se o seu valor √© um booleano. Se for, exiba a mensagem "√â um booleano", caso contr√°rio, exiba a mensagem "N√£o √© um booleano".`)

variableString = "abc"
let variableBoolean = true

resultTypeOf = typeof(variableString) == "boolean" ? console.log(`O tipo ${variableString} √© um boolean`) : console.log(`O tipo ${variableString} n√£o √© um boolean`)

resultTypeOf = typeof(variableBoolean) == "boolean" ? console.log(`O tipo ${variableBoolean} √© um boolean`) : console.log(`O tipo ${variableBoolean} n√£o √© um boolean`)

console.log(`6. Crie um script que declare duas vari√°veis e exiba o resultado da subtra√ß√£o entre elas.`)

numberOne = 12
numberTwo = 3

result = Number(numberOne - numberTwo)

console.log(`Resultado da subtra√ß√£o de ${numberOne} - ${numberTwo} √© ${result}`)

console.log(`7. Crie um script que declare duas vari√°veis e exiba o resultado da multiplica√ß√£o entre elas.`)

numberOne = 12
numberTwo = 3

result = Number(numberOne * numberTwo)

console.log(`Resultado da multiplica√ß√£o de ${numberOne} * ${numberTwo} √© ${result}`)

console.log(`8. Crie um script que declare duas vari√°veis e exiba o resultado da divis√£o entre elas.`)

numberOne = 12
numberTwo = 3

result = Number(numberOne / numberTwo)

console.log(`Resultado da divis√£o de ${numberOne} / ${numberTwo} √© ${result}`)

console.log(`9. Crie um script que declare uma vari√°vel e verifique se o seu valor √© um n√∫mero par. Se for, exiba a mensagem "√â um n√∫mero par", caso contr√°rio, exiba a mensagem "N√£o √© um n√∫mero par".`)

numberOne = 12
numberTwo = 13

isOdd = (numberOne % 2) == 0 ? console.log(`O n√∫mero ${numberOne} √© um n√∫mero par`) : console.log(`O n√∫mero ${numberOne} n√£o √© um n√∫mero par`)

isOdd = (numberTwo % 2) == 0 ? console.log(`O n√∫mero ${numberTwo} √© um n√∫mero par`) : console.log(`O n√∫mero ${numberTwo} n√£o √© um n√∫mero par`)

console.log(`10. Crie um script que declare uma vari√°vel e verifique se o seu valor √© um n√∫mero √≠mpar. Se for, exiba a mensagem "√â um n√∫mero √≠mpar", caso contr√°rio, exiba a mensagem "N√£o √© um n√∫mero √≠mpar".`)

numberOne = 15
numberTwo = 8

isOdd = (numberOne % 2) == 0 ? console.log(`O n√∫mero ${numberOne} n√£o √© um n√∫mero √≠mpar`) : console.log(`O n√∫mero ${numberOne} √© um n√∫mero √≠mpar`)

isOdd = (numberTwo % 2) == 0 ? console.log(`O n√∫mero ${numberTwo} n√£o √© um n√∫mero √≠mpar`) : console.log(`O n√∫mero ${numberTwo} √© um n√∫mero √≠mpar`)